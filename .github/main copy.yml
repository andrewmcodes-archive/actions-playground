name: Main copy
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@master
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Bundle install
        uses: andrewmcodes/rails-test-runner-action@master
        with:
          args: bundle install --path vendor/bundle --jobs 4 --retry 3
      - name: Yarn
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        uses: andrewmcodes/rails-test-runner-action@master
        with:
          args: yarn install
      - name: test
        uses: andrewmcodes/rails-test-runner-action@master
        with:
          args: bundle exec rails db:prepare && bundle exec rails test
        env:
          DATABASE_URL: postgres://postgres:@127.0.0.1:5432
          REDIS_URL: redis://127.0.0.1:6379/0
          RAILS_ENV: test
